ok.. so we gotta restart from beginning , precedent parsing was good but a pain in teh arse for updating
So an archi have to be rebuilt

Taking this small example

typedef int toto;

def int myfunc(int a) {
    var toto b;
    b = a + (5 * 2);
    if b > 5
       	return b;
    else
	return a;
}

we should have this:

 First one lined arborescense:
   keyword::typedef::node, type::node, id_specifier::node,
   keyword::def::node, id_specifier::node, Bparenthesis::node, type::node, id_specifier::node, Eparenthesis::node, Bbracket::Node,
   keyword::var::node, id_specifier::node, eol::node,
   id_specifier::node, operator::equal::node, id_specifier::node, operator::plus::node, Bparenthesis::node, value::node, operator...

 Then pre-compilation is done: all keyword reorganized the code:

 [...]

So... what's a node?
  Many thing: its translation, interpretation, size...
